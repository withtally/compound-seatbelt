name: Governance Checks

on:
  schedule:
    - cron: "0 */3 * * *"
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  check-proposals:
    name: Check Compound Proposals
    runs-on: ubuntu-latest
    environment: ci

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache proposal simulation results and ABIs
        uses: actions/cache@v4
        with:
          path: |
            cache
            reports
          key: ${{ runner.os }}-governance-cache-${{ hashFiles('package.json', 'bun.lockb', 'index.ts', 'run-checks.ts', 'types.d.ts', 'checks/**/*', 'utils/**/*', 'presentation/**/*', 'sims/**/*') }}
          restore-keys: |
            ${{ runner.os }}-governance-cache-

      - name: Install dependencies
        run: bun install

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-slither-v1
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Slither dependencies
        run: |
          pip3 install solc-select slither-analyzer
          # Required solc versions for analyzing relevant Uniswap contracts
          solc-select install 0.8.19
          solc-select install 0.8.20
          solc-select use 0.8.20

      - name: Run checks
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 5
          retry_wait_seconds: 300
          command: bun start
          on_retry_command: echo "Retrying due to possible rate limiting..."
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RPC_URL: ${{ secrets.RPC_URL }}
          MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL }}
          ARBITRUM_RPC_URL: ${{ secrets.ARBITRUM_RPC_URL }}
          TENDERLY_ACCESS_TOKEN: ${{ secrets.TENDERLY_ACCESS_TOKEN }}
          TENDERLY_USER: ${{ secrets.TENDERLY_USER }}
          TENDERLY_PROJECT_SLUG: ${{ secrets.TENDERLY_PROJECT_SLUG }}
          DAO_NAME: ${{ vars.DAO_NAME }}
          GOVERNOR_ADDRESS: ${{ vars.GOVERNOR_ADDRESS }}

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.DAO_NAME }}
          path: reports/${{ vars.DAO_NAME }}/${{ vars.GOVERNOR_ADDRESS }}/
